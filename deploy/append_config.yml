---
- name: Appending config
  block: 

    - name: Get all running Docker containers
      shell: docker ps --format "{{'{{.Names}}'}}"
      register: running_containers

    - name: prometheus config section
      block:

      - name: Find prometheus container's name
        set_fact:
          prometheus_container_name: >-
            {{
              running_containers.stdout_lines | select("search", "prometheus") | first
            }}
        when: running_containers.stdout_lines | length > 0

      # need to know where the mount file is to change 
      - name: Get prometheus docker container details
        shell: docker inspect {{ prometheus_container_name }}
        register: docker_inspect_result

      - name: Find the mounted path of prometheus.yml
        set_fact:
          prometheus_config_path: >-
            {{
              (docker_inspect_result.stdout | from_json)[0].Mounts
              | selectattr('Destination', 'equalto', '/etc/prometheus')
              | map(attribute='Source')
              | first
            }}/prometheus.yml
        when: docker_inspect_result.stdout is defined

      - name: Appends rule_files in prometheus file
        blockinfile: 
          path: "{{ prometheus_config_path }}"
          block: |
            {% filter indent(width=2, first=true) %}
            - rules/gb200_rules.yml
            {% endfilter %}
          insertafter: "^rule_files:"
        when: prometheus_config_path is defined

      - name: Restart prometheus service
        shell: docker exec {{ prometheus_container_name }} kill -s SIGHUP 1
    
    - name: alertmanager config section
      block:
      - name: Gather target information from inventory
        set_fact:
          host: "{{ ( groups['local'] ) | map('extract', hostvars, 'ansible_host') | list }}"
          line_token: "{{ hostvars['localhost']['token'] }}"

      - name: Find alertmanager container name
        set_fact:
          alertmanager_container_name: >-
            {{
              running_containers.stdout_lines | select("search", "alertmanager") | first
            }}
        when: running_containers.stdout_lines | length > 0

      - name: Get alertmanager docker container details
        shell: docker inspect {{ alertmanager_container_name }}
        register: docker_inspect_result

      - name: Find the mounted path of alertmanager.yml
        set_fact:
          alertmanager_config_path: >-
            {{
              (docker_inspect_result.stdout | from_json)[0].Mounts
              | selectattr('Destination', 'equalto', '/etc/alertmanager')
              | map(attribute='Source')
              | first
            }}/alertmanager.yml
        when: docker_inspect_result.stdout is defined

      - name: Generate alertmanager configuration file
        template:
          src: docker/alertmanager/alertmanager.yml.j2
          dest: '{{alertmanager_config_path}}'
        vars:
          webhook_ip: "{{ host[0] }}"
          line_token: "{{ line_token }}"

      - name: restart alertamanger service
        shell: docker exec {{ alertmanager_container_name }} kill -s SIGHUP 1
