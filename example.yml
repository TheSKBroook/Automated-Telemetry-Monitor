---
- name: Deploy product from scratch
  hosts: all
  become: true
  tasks:

  # Step 1: Verify Internet Connection
  - name: Check Internet connectivity
    ping:
    ignore_errors: yes
    register: internet_status

  - name: Fail if no Internet connection
    fail:
      msg: "No Internet connection detected. Please check your network."
    when: internet_status is failed

  # Step 2: Check and Install Docker
  - name: Check if Docker is installed
    command: docker --version
    ignore_errors: yes
    register: docker_check

  - name: Install Docker if not installed
    apt:
      name: docker.io
      state: present
      update_cache: yes
    when: docker_check is failed

  # Step 3: Check for Required Docker Images
  - name: Ensure Docker images are present
    shell: docker images | grep {{ item }}
    with_items:
      - prom/prometheus
      - grafana/grafana
      - alertmanager
    ignore_errors: yes
    register: image_check

  - name: Pull missing Docker images
    shell: docker pull {{ item }}
    with_items:
      - prom/prometheus
      - grafana/grafana
      - alertmanager
    when: item not in image_check.results | map(attribute='stdout') | list

  # Step 4: Check and Install Pip
  - name: Check if pip is installed
    command: pip --version
    ignore_errors: yes
    register: pip_check

  - name: Install pip if not installed
    apt:
      name: python3-pip
      state: present
    when: pip_check is failed

  - name: Install required Python libraries
    pip:
      name:
        - paramiko
        - docker
      state: present

  # Step 5: Verify SSH Key
  - name: Check if SSH key exists
    stat:
      path: ~/.ssh/id_rsa
    register: ssh_key_check

  - name: Generate SSH key if missing
    command: ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa -q -N ""
    when: not ssh_key_check.stat.exists

  # Step 6: Install Exporters
  - name: Check if Node Exporter is installed
    shell: pgrep node_exporter
    ignore_errors: yes
    register: node_exporter_check

  - name: Install Node Exporter
    get_url:
      url: https://github.com/prometheus/node_exporter/releases/latest/download/node_exporter-1.6.0.linux-amd64.tar.gz
      dest: /tmp/node_exporter.tar.gz
    when: node_exporter_check is failed

  - name: Extract and configure Node Exporter
    unarchive:
      src: /tmp/node_exporter.tar.gz
      dest: /usr/local/bin/
      remote_src: yes
    when: node_exporter_check is failed

  - name: Start Node Exporter
    command: nohup /usr/local/bin/node_exporter &

  # Step 7: Configure and Start Docker Containers
  - name: Copy Docker config files
    copy:
      src: /path/to/config/files/
      dest: /etc/docker/configs/

  - name: Start Docker containers
    docker_container:
      name: "{{ item.name }}"
      image: "{{ item.image }}"
      state: started
      ports: "{{ item.ports }}"
    with_items:
      - { name: "prometheus", image: "prom/prometheus", ports: ["9090:9090"] }
      - { name: "grafana", image: "grafana/grafana", ports: ["3000:3000"] }
      - { name: "alertmanager", image: "alertmanager", ports: ["9093:9093"] }

  # Step 8: Post-Deployment Validation
  - name: Validate Prometheus is running
    uri:
      url: http://localhost:9090
      status_code: 200

  - name: Validate Grafana is running
    uri:
      url: http://localhost:3000
      status_code: 200

  - name: Notify user to run control.py and line.py
    debug:
      msg: >
        Deployment completed. 
        Please manually run control.py (playbook) and line.py (notification script) if required.
